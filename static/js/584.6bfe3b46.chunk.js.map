{"version":3,"file":"static/js/584.6bfe3b46.chunk.js","mappings":"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","sources":["components/NewsEditer/index.jsx","views/NewsSandBox/news-manage/NewsAdd/index.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { convertToRaw, EditorState, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport './index.css'\r\nfunction NewsEditer(props) {\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n    useEffect(() => {\r\n        if (props.content) {\r\n            const contentBlock = htmlToDraft(props.content)\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n            const editState = EditorState.createWithContent(contentState)\r\n            setEditorState(editState)\r\n        }\r\n    }, [props.content])\r\n    return (\r\n        <Editor\r\n            editorState={editorState}\r\n            wrapperClassName=\"wrapper-editer\"\r\n            editorClassName=\"editor\"\r\n            onEditorStateChange={(editorState) => setEditorState(editorState)}\r\n            onBlur={() => {\r\n                props.getContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\r\n            }}\r\n        />\r\n    )\r\n}\r\nexport default NewsEditer","import React, { useEffect, useState, createRef } from 'react'\r\nimport { PageHeader, Steps, Button, Form, Input, Select, message, notification } from 'antd';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\nimport NewsEditer from '../../../../components/NewsEditer';\r\nimport { nanoid } from 'nanoid';\r\nconst { Step } = Steps;\r\nconst { Option } = Select\r\nexport default function NewsAdd() {\r\n  let [current, setCurrent] = useState(0);\r\n  let [categories, setCategories] = useState([]);\r\n  let [article, setArticle] = useState({})\r\n  let [content, setContent] = useState('')\r\n  let form1Ref = createRef()\r\n  let navigate = useNavigate()\r\n  let { region, roleId, username } = JSON.parse(localStorage.getItem('token'))\r\n  useEffect(() => {\r\n    axios.get('/api/getCategories').then((res) => setCategories(res.data))\r\n  }, [])\r\n  const handleNext = () => {\r\n    if (current === 0) {\r\n      form1Ref.current.validateFields().then((value) => {\r\n        setArticle({ ...value })\r\n        setCurrent(current + 1)\r\n      }).catch(() => { console.log('error') })\r\n    } else {\r\n      if (content === '' || content.trim() === '<p></p>') {\r\n        message.error('新闻内容不能为空！')\r\n      }\r\n      else setCurrent(current + 1)\r\n    }\r\n  }\r\n  const handlePrevious = () => {\r\n    setCurrent(current - 1)\r\n  }\r\n  const handleSave = (state) => {\r\n    let articleInfo = {\r\n      \"title\": article.title,\r\n      \"categoryId\": article.categoryId,\r\n      \"content\": content,\r\n      \"region\": region ? region : '全球',\r\n      \"author\": username,\r\n      \"roleId\": roleId,\r\n      \"auditState\": state,\r\n      \"publishState\": 0,\r\n      \"createTime\": Date.now(),\r\n      \"star\": 0,\r\n      \"view\": 0,\r\n      \"id\": nanoid(),\r\n      \"publishTime\": 0\r\n    }\r\n    axios.post('/api/addNews', articleInfo).then(() => {\r\n      notification.info({\r\n        message: '提交/保存成功！',\r\n        placement: 'topRight',\r\n      });\r\n      navigate(state === 0 ? '/news-manage/draft' : '/audit-manage/list')\r\n    })\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 3 },\r\n    wrapperCol: { span: 21 },\r\n  };\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"撰写新闻\"\r\n      />\r\n      <Steps current={current}>\r\n        <Step title=\"基本信息\" description=\"新闻标题，新闻分类\" />\r\n        <Step title=\"新闻主体\" description=\"新闻主题内容\" />\r\n        <Step title=\"新闻提交\" description=\"保存草稿或提交审核\" />\r\n      </Steps>\r\n      <div style={{ display: current === 0 ? 'block' : 'none', marginTop: '20px' }}>\r\n        <Form {...layout} ref={form1Ref}>\r\n          <Form.Item label=\"新闻标题\" name=\"title\" rules={[{ required: true, message: '请输入标题！' }]} >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"新闻分类\" name=\"categoryId\" rules={[{ required: true, message: '请选择新闻分类' }]}>\r\n            <Select>\r\n              {categories.map((item) => <Option value={item.id} key={item.id}>{item.title}</Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </div>\r\n      <div style={{ display: current === 1 ? 'block' : 'none', marginTop: '20px', height: '350px' }}>\r\n        <NewsEditer getContent={(value) => { setContent(value) }}></NewsEditer>\r\n      </div>\r\n      <div style={{ display: current === 2 ? 'block' : 'none' }}></div>\r\n      <div style={{ marginTop: '80px', }}>\r\n        {\r\n          current < 2 && <Button type='primary' onClick={handleNext}>下一步</Button>\r\n        }\r\n        {\r\n          current === 2 && <Button type='primary' onClick={() => { handleSave(0) }}>保存草稿</Button>\r\n        }\r\n        {\r\n          current === 2 && <Button type='danger' onClick={() => { handleSave(1) }}>提交审核</Button>\r\n        }\r\n        {\r\n          current > 0 && <Button onClick={handlePrevious}>上一步</Button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["props","useState","EditorState","editorState","setEditorState","useEffect","content","contentBlock","htmlToDraft","contentState","ContentState","contentBlocks","editState","Editor","wrapperClassName","editorClassName","onEditorStateChange","onBlur","getContent","draftToHtml","convertToRaw","getCurrentContent","Step","Steps","Option","Select","NewsAdd","current","setCurrent","categories","setCategories","article","setArticle","setContent","form1Ref","createRef","navigate","useNavigate","JSON","parse","localStorage","getItem","region","roleId","username","axios","then","res","data","handleSave","state","articleInfo","title","categoryId","Date","now","nanoid","notification","message","placement","className","description","style","display","marginTop","labelCol","span","wrapperCol","ref","label","name","rules","required","map","item","value","id","height","type","onClick","validateFields","catch","console","log","trim","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}