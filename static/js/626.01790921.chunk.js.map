{"version":3,"file":"static/js/626.01790921.chunk.js","mappings":"sSAKQA,EAAYC,EAAAA,EAAAA,QACL,SAASC,IACtB,IAAIC,GAAWC,EAAAA,EAAAA,MACPC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,UAA7CJ,SACR,GAAsBK,EAAAA,EAAAA,UAAS,IAA/B,eAAKC,EAAL,KAAWC,EAAX,KACMC,EAAgB,CACpB,EAAG,CAAC,qBAAO,UACX,EAAG,CAAC,qBAAO,SACX,EAAG,CAAC,qBAAO,QAEPC,EACD,eADCA,EAED,eAFCA,EAGD,gBAELC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAU,uBAAwB,CAAEC,OAAQ,CAAEC,OAAQb,KAAcc,MAAK,SAACC,GACxER,EAAQQ,EAAIC,WAEb,CAAChB,IACJ,IAAMiB,EAAU,CACd,CACEC,MAAO,2BACPC,UAAW,QACXC,MAAO,IACPC,OAAQ,SAACH,EAAOI,GACd,OAAO,SAAC,KAAD,CAAMC,GAAE,+BAA0BD,EAAKE,IAAMC,MAAOH,EAApD,SAA2DJ,MAGtE,CACEA,MAAO,eACPC,UAAW,UAEb,CACED,MAAO,2BACPC,UAAW,gBAEb,CACED,MAAO,2BACPC,UAAW,aACXE,OAAQ,SAACK,GACP,OAAO,SAAC,IAAD,CAAKC,MAAOnB,EAAckB,GAAY,GAAtC,SAA2ClB,EAAckB,GAAY,OAGhF,CACER,MAAO,eACPG,OAAQ,SAACC,GA8BP,OAAQA,EAAKI,YACX,KAAK,EACH,OAAO,SAAC,IAAD,CAAQE,KAAK,SAASC,QAnBjB,WACdlC,EAAQ,CACNuB,MAAO,6CACPY,MAAM,SAAC,IAAD,IACNC,OAAQ,eACRC,WAAY,eACZC,KALM,WAMJtB,IAAAA,KAAW,mBAAX,kBAAmCW,GAAnC,IAAyCI,WAAY,KAAKZ,MAAK,WAC7DoB,EAAAA,EAAAA,KAAkB,CAChBC,QAAS,2EACTC,UAAW,aAEb7B,EAAQD,EAAK+B,QAAO,SAACrB,GAAD,OAAUA,EAAKQ,KAAOF,EAAKE,cAO5C,SAAyCf,IAClD,KAAK,EACH,OAAO,SAAC,IAAD,CAAQ6B,QAAM,EAACT,QAjCV,WACdlB,IAAAA,KAAW,0BAA2B,CAAEa,GAAIF,EAAKE,GAAIe,aAAc,EAAGC,YAAaC,KAAKC,QAAS5B,MAAK,WACpGoB,EAAAA,EAAAA,KAAkB,CAChBC,QAAS,iCACTC,UAAW,aAEb7B,EAAQD,EAAK+B,QAAO,SAACrB,GAAD,OAAUA,EAAKQ,KAAOF,EAAKE,WA2BxC,SAAkCf,IAC3C,KAAK,EACH,OAAO,SAAC,IAAD,CAAQmB,KAAK,UAAUC,QA1BrB,WACX/B,EAAS,uBAAD,OAAwBwB,EAAKE,IAAM,CAAEC,MAAOH,KAyB3C,SAAuCb,IAChD,QACE,OAAO,SAAC,IAAD,2CAKjB,OACE,SAAC,IAAD,CAAOkC,WAAYrC,EAAMW,QAASA,EAAS2B,OAAQ,SAAAtB,GAAI,OAAIA,EAAKE,IAAIqB,WAAY,CAAEC,SAAU","sources":["views/NewsSandBox/audit-manage/AuditList/index.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Modal, Table, notification, Tag } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nconst { confirm } = Modal\r\nexport default function AuditList() {\r\n  let navigate = useNavigate()\r\n  const { username } = JSON.parse(localStorage.getItem('token'))\r\n  let [news, setNews] = useState([])\r\n  const auditStateMap = {\r\n    1: ['审核中', 'orange'],\r\n    2: ['已通过', 'green'],\r\n    3: ['未通过', 'red']\r\n  }\r\n  const buttonMap = {\r\n    1: '撤销',\r\n    2: '发布',\r\n    3: '修改',\r\n  }\r\n  useEffect(() => {\r\n    axios.get('/api/getNewsByAuthor', { params: { author: username } }).then((res) => {\r\n      setNews(res.data)\r\n    })\r\n  }, [username])\r\n  const columns = [\r\n    {\r\n      title: '新闻标题',\r\n      dataIndex: 'title',\r\n      width: 480,\r\n      render: (title, item) => {\r\n        return <Link to={`/news-manage/preview/${item.id}`} state={item}>{title}</Link>\r\n      }\r\n    },\r\n    {\r\n      title: '作者',\r\n      dataIndex: 'author'\r\n    },\r\n    {\r\n      title: '新闻分类',\r\n      dataIndex: 'categoryName'\r\n    },\r\n    {\r\n      title: '审核状态',\r\n      dataIndex: 'auditState',\r\n      render: (auditState) => {\r\n        return <Tag color={auditStateMap[auditState][1]}>{auditStateMap[auditState][0]}</Tag>\r\n      }\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: (item) => {\r\n        const publish = () => {\r\n          axios.post('/api/updatePublishState', { id: item.id, publishState: 2, publishTime: Date.now() }).then(() => {\r\n            notification.info({\r\n              message: '发布成功！',\r\n              placement: 'topRight',\r\n            });\r\n            setNews(news.filter((data) => data.id !== item.id))\r\n          })\r\n        }\r\n        const edit = () => {\r\n          navigate(`/news-manage/update/${item.id}`, { state: item })\r\n        }\r\n        const backout = () => {\r\n          confirm({\r\n            title: '确定要撤销吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk() {\r\n              axios.post('/api/updateNews', { ...item, auditState: 0 }).then(() => {\r\n                notification.info({\r\n                  message: '撤销成功，已放入草稿箱！',\r\n                  placement: 'topRight',\r\n                });\r\n                setNews(news.filter((data) => data.id !== item.id))\r\n              })\r\n            },\r\n          });\r\n        }\r\n        switch (item.auditState) {\r\n          case 1:\r\n            return <Button type='danger' onClick={backout}>{buttonMap[1]}</Button>\r\n          case 2:\r\n            return <Button danger onClick={publish}>{buttonMap[2]}</Button>\r\n          case 3:\r\n            return <Button type='primary' onClick={edit}>{buttonMap[3]}</Button>\r\n          default:\r\n            return <Tag>未知错误</Tag>\r\n        }\r\n      }\r\n    }\r\n  ]\r\n  return (\r\n    <Table dataSource={news} columns={columns} rowKey={item => item.id} pagination={{ pageSize: 5 }}></Table>\r\n  )\r\n}"],"names":["confirm","Modal","AuditList","navigate","useNavigate","username","JSON","parse","localStorage","getItem","useState","news","setNews","auditStateMap","buttonMap","useEffect","axios","params","author","then","res","data","columns","title","dataIndex","width","render","item","to","id","state","auditState","color","type","onClick","icon","okText","cancelText","onOk","notification","message","placement","filter","danger","publishState","publishTime","Date","now","dataSource","rowKey","pagination","pageSize"],"sourceRoot":""}