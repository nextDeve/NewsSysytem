{"version":3,"file":"static/js/631.f58af5d4.chunk.js","mappings":"+ZAIMA,EAAkBC,EAAAA,cAAoB,MACpCC,EAAYC,EAAAA,EAAAA,QACdC,EAAc,SAAC,GAAwB,EAAtBC,MAAuB,IAAbC,GAAY,YAC3C,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACA,OACE,SAAC,IAAD,CAAMA,KAAMA,EAAMC,WAAW,EAA7B,UACE,SAACT,EAAgBU,SAAjB,CAA0BC,MAAOH,EAAjC,UACE,yBAAQF,SAMVM,EAAe,SAAC,GAQf,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACGC,GACC,YACJ,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBhB,GAAOiB,EAAAA,EAAAA,YAAWzB,IACxB0B,EAAAA,EAAAA,YAAU,WACJL,GACFE,EAASI,QAAQC,UAElB,CAACP,IAEJ,IAAMQ,EAAa,WACjBP,GAAYD,GACZb,EAAKsB,gBAAL,UACGd,EAAYC,EAAOD,MAIlBe,EAAI,mCAAG,6GAEYvB,EAAKwB,iBAFjB,OAEHC,EAFG,OAGTJ,IACAX,GAAW,kBAAKD,GAAWgB,IAJlB,gDAMTC,QAAQC,IAAI,eAAZ,MANS,yDAAH,qDAUNC,EAAYrB,EA+BhB,OA7BID,IACFsB,EAAYf,GACV,SAAC,SAAD,CACEgB,MAAO,CACLC,OAAQ,GAEVC,KAAMvB,EACNwB,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,GAAD,OAAK7B,EAAL,mBARb,UAYE,SAAC,IAAD,CAAO8B,IAAKpB,EAAUqB,aAAcb,EAAMc,OAAQd,OAGpD,gBACEe,UAAU,2BACVT,MAAO,CACLU,aAAc,IAEhBC,QAASnB,EALX,SAOGd,MAKA,iCAAQI,GAAR,aAAoBiB,MAEd,SAASa,IACtB,OAAkC7B,EAAAA,EAAAA,UAAS,IAA3C,eAAK8B,EAAL,KAAiBC,EAAjB,KACMC,EAAa,CACjBC,KAAM,CACJC,IAAKlD,EACLmD,KAAM3C,KAGVc,EAAAA,EAAAA,YAAU,WACR8B,IAAAA,IAAU,sBAAsBC,MAAK,SAACC,GACpCP,EAAcO,EAAIC,WAEnB,IACH,IAAMzC,EAAa,SAACP,GAClBwC,EAAcD,EAAWU,KAAI,SAACC,GAAD,OAAUA,EAAKC,KAAOnD,EAAMmD,GAAKnD,EAAQkD,MACtEL,IAAAA,KAAW,sBAAuB7C,IAE9BoD,EAAU,CACd,CACElD,MAAO,KACPG,UAAW,MAEb,CACEH,MAAO,2BACPG,UAAW,QACXgD,MAAO,IACPC,OAAQ,SAAChD,GAAD,MAAa,CACnBA,OAAAA,EACAH,UAAU,EACVE,UAAW,QACXH,MAAO,2BACPK,WAAYA,KAGhB,CACEL,MAAO,eACPqD,OAAQ,SAACL,GAkBP,OAAO,SAAC,IAAD,CAAQM,QAAM,EAACnB,QAjBC,WACrB9C,EAAQ,CACNW,MAAO,6CACPuD,MAAM,SAAC,IAAD,IACNC,OAAQ,eACRC,WAAY,eACZC,KALM,WAMJf,IAAAA,KAAW,sBAAuB,CAAEM,GAAID,EAAKC,KAAML,MAAK,WACtDN,EAAcD,EAAWsB,QAAO,SAAAb,GAAI,OAAIA,EAAKG,KAAOD,EAAKC,OACzDW,EAAAA,EAAAA,KAAkB,CAChB/B,QAAS,iCACTgC,UAAW,oBAMd,6BAIb,OACE,SAAC,IAAD,CAAOC,WAAYzB,EAAYa,QAASA,EAASa,OAAQ,SAACf,GAAD,OAAUA,EAAKC,IAAIV,WAAYA","sources":["views/NewsSandBox/news-manage/NewsCategory/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport { Button, Table, Form, Input, Modal, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nconst EditableContext = React.createContext(null);\r\nconst { confirm } = Modal\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\nexport default function NewsCategory() {\r\n  let [categories, setCategories] = useState([])\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios.get('/api/getCategories').then((res) => {\r\n      setCategories(res.data)\r\n    })\r\n  }, [])\r\n  const handleSave = (value) => {\r\n    setCategories(categories.map((item) => item.id === value.id ? value : item))\r\n    axios.post('/api/updateCategory', value)\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: '栏目名称',\r\n      dataIndex: 'title',\r\n      width: 600,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: true,\r\n        dataIndex: 'title',\r\n        title: '栏目名称',\r\n        handleSave: handleSave,\r\n      }),\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: (item) => {\r\n        const deleteCatogory = () => {\r\n          confirm({\r\n            title: '确定要删除吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk() {\r\n              axios.post('/api/deleteCategory', { id: item.id }).then(() => {\r\n                setCategories(categories.filter(data => data.id !== item.id))\r\n                notification.info({\r\n                  message: '删除成功！',\r\n                  placement: 'topRight',\r\n                });\r\n              })\r\n            },\r\n          });\r\n        }\r\n        return <Button danger onClick={deleteCatogory}>删除</Button>\r\n      }\r\n    }\r\n  ]\r\n  return (\r\n    <Table dataSource={categories} columns={columns} rowKey={(item) => item.id} components={components}></Table>\r\n  )\r\n}\r\n"],"names":["EditableContext","React","confirm","Modal","EditableRow","index","props","Form","form","component","Provider","value","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","validateFields","values","console","log","childNode","style","margin","name","rules","required","message","ref","onPressEnter","onBlur","className","paddingRight","onClick","NewsCategory","categories","setCategories","components","body","row","cell","axios","then","res","data","map","item","id","columns","width","onCell","render","danger","icon","okText","cancelText","onOk","filter","notification","placement","dataSource","rowKey"],"sourceRoot":""}